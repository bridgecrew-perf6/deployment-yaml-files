apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    meta.helm.sh/release-name: mainflux
    meta.helm.sh/release-namespace: mf
  creationTimestamp: "2022-03-08T10:25:41Z"
  generation: 1
  labels:
    app.kubernetes.io/instance: mainflux
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: keto
    app.kubernetes.io/version: v0.7.0
    helm.sh/chart: keto-0.21.7
  name: mainflux-keto
  namespace: mf
  resourceVersion: "2150263"
  uid: 24024d0d-b8b6-41e2-8815-0069fd842965
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: mainflux
      app.kubernetes.io/name: keto
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: mainflux
        app.kubernetes.io/name: keto
    spec:
      automountServiceAccountToken: true
      containers:
      - args:
        - serve
        - --config
        - /etc/config/keto.yaml
        command:
        - keto
        env:
        - name: DSN
          valueFrom:
            secretKeyRef:
              key: dsn
              name: mainflux-keto
        image: oryd/keto:v0.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health/alive
            port: http-write
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: keto
        ports:
        - containerPort: 4466
          name: http-read
          protocol: TCP
        - containerPort: 4467
          name: http-write
          protocol: TCP
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /health/ready
            port: http-write
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 100
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/config
          name: keto-config-volume
          readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: mainflux-keto
      serviceAccountName: mainflux-keto
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: mainflux-keto-config
        name: keto-config-volume
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2022-03-08T10:26:22Z"
    lastUpdateTime: "2022-03-08T10:26:22Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2022-03-08T10:25:42Z"
    lastUpdateTime: "2022-03-08T10:26:22Z"
    message: ReplicaSet "mainflux-keto-f59698db9" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1


